{
  "webapp": {
    "modules": ["user", "billing", "help"],
    "couchdb_admin_user": "= global.services[:couchdb].couch.users[:admin]",
//    "couchdb_webapp_user": "= global.services[:couchdb].couch.users[:webapp]",
    "couchdb_webapp_user": "= global.services[:couchdb].couch.users[:admin]",
    "favicon": "= file_path 'branding/favicon.ico'",
    "tail_scss": "= file_path 'branding/tail.scss'",
    "head_scss": "= file_path 'branding/head.scss'",
    "img_dir": "= file_path 'branding/img'",
    "client_certificates": "= global.provider.ca.client_certificates",
    "allow_limited_certs": "= global.provider.service.allow_limited_bandwidth",
    "allow_unlimited_certs": "= global.provider.service.allow_unlimited_bandwidth",
    "allow_anonymous_certs": "= global.provider.service.allow_anonymous",
    "secret_token": "= secret :webapp_secret_token",
    "api_version": 1,
    "secure": false
  },
  "stunnel": {
    "couch_client": "= stunnel_client(nodes_like_me[:services => :couchdb], global.services[:couchdb].couch.port)"
  },
  "haproxy": {
    "local_ports": "= stunnel.couch_client.field(:accept_port)",
    "servers": "= haproxy_servers(nodes_like_me[:services => :couchdb], stunnel.couch_client)"
  },
  "definition_files": {
    "provider": "= file :provider_json_template",
    "eip_service": "= file [:eip_service_json_template, 'v'+webapp.api_version.to_s]",
    "soledad_service": "= file [:soledad_service_json_template, 'v'+webapp.api_version.to_s]",
    "smtp_service": "= file [:smtp_service_json_template, 'v'+webapp.api_version.to_s]"
  },
  "service_type": "public_service",
  "api": {
    "domain": "= 'api.' + domain.full_suffix",
    "port": 4430
  },
  "nickserver": {
    "domain": "= 'nicknym.' + domain.full_suffix",
    "port": 6425,
    "couchdb_user": "= global.services[:couchdb].couch.users[:admin]"
  },
  "dns": {
    "aliases": "= [domain.full_suffix, domain.full, api.domain, nickserver.domain]"
  },
  "x509": {
    "use": true,
    "ca_cert": "= file :ca_cert, :missing => 'provider CA. Run `leap cert ca`'",
    "client_ca_cert": "= file_path :client_ca_cert",
    "client_ca_key": "= file_path :client_ca_key",
    "commercial_cert": "= file [:commercial_cert, domain.full_suffix]",
    "commercial_key": "= file [:commercial_key, domain.full_suffix]",
    "commercial_ca_cert": "= try_file :commercial_ca_cert"
  }
}
